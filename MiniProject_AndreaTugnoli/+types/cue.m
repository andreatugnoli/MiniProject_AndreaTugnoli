function stageData = cue()
    % cue: creates the cue type specific stage data
    %
    % SYNTAX:   stageData = types.cue()
    %
    % INPUTS:
    %           None
    %
    % OUTPUTS:
    %           stageData       stage specific struct for cue
    %
    % EXAMPLE:
    %           stageData = types.cue();
    %

    % type specific variables
    imageFolder = fullfile('images', 'cues');
    images = { ...
        fullfile(imageFolder, 'fig1.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig2.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig3.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig4.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig5.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig101.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig102.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig103.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig104.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig105.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig201.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig202.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig203.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig204.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig205.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig301.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig302.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig303.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig304.jpg'), 0.6; ...
        fullfile(imageFolder, 'fig305.jpg'), 0.6; ...
        };



    % BaseStruct of type task
    stageData = struct(...
        'image',      '', ...
        'scale',      nan, ...
        'dataSetID',  nan ...
        );

    % defining parameters for type cue
    stageData.image      = images(:, 1);
    stageData.scale      = images(:, 2);
  

    % load and add image Data
    stageData = tools.addImage(stageData);
end
